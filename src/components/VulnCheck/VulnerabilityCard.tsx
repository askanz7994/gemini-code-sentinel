
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { ShieldAlert, ShieldX, ShieldHalf, ShieldCheck, FileCode, Zap, Target, Wrench, LoaderCircle, CheckCircle } from "lucide-react";
import { Vulnerability, RepoInfo } from "@/types/vulnerability";
import DiffViewer from "./DiffViewer";

const severityIcons = {
  'Critical': <ShieldAlert className="h-5 w-5 text-red-500" />,
  'High': <ShieldX className="h-5 w-5 text-orange-500" />,
  'Medium': <ShieldHalf className="h-5 w-5 text-yellow-500" />,
  'Low': <ShieldCheck className="h-5 w-5 text-blue-500" />,
};

type VulnerabilityCardProps = {
  vulnerability: Vulnerability;
  fileContents: Record<string, string>;
  loadingFileContentForVulnId: number | null;
  onViewCode: (vulnerability: Vulnerability) => void;
};

const VulnerabilityCard = ({ 
  vulnerability, 
  fileContents, 
  loadingFileContentForVulnId, 
  onViewCode 
}: VulnerabilityCardProps) => {
  return (
    <Card className="bg-card/80 backdrop-blur-sm border-border/30">
      <CardHeader>
        <CardTitle className="flex items-center gap-3">
          {severityIcons[vulnerability.severity]}
          <span className="text-lg">{vulnerability.severity} Severity</span>
        </CardTitle>
      </CardHeader>
      <CardContent>
        <p className="font-mono text-sm text-accent mb-2">{vulnerability.file}:{vulnerability.line}</p>
        <p className="text-muted-foreground">{vulnerability.description}</p>
        <Accordion type="single" collapsible className="w-full mt-4">
          <AccordionItem value={`code-${vulnerability.id}`}>
            <AccordionTrigger className="text-sm hover:no-underline" onClick={() => onViewCode(vulnerability)}>
              <div className="flex items-center gap-2">
                <FileCode className="h-4 w-4 text-muted-foreground" />
                <span>View Code</span>
              </div>
            </AccordionTrigger>
            <AccordionContent>
              {loadingFileContentForVulnId === vulnerability.id && (
                <div className="flex items-center justify-center p-4">
                  <LoaderCircle className="h-6 w-6 animate-spin" />
                </div>
              )}
              {fileContents[vulnerability.file] && (
                <div className="bg-background/50 rounded-md overflow-hidden border">
                  <pre className="max-h-96 overflow-y-auto p-2 font-mono text-xs">
                    <code>
                      {fileContents[vulnerability.file].split('\n').map((line, index) => (
                        <div 
                          key={index}
                          className={`flex items-start -mx-2 px-2 ${index + 1 === vulnerability.line ? 'bg-red-500/20' : 'hover:bg-white/5'}`}
                        >
                          <span className="text-right pr-4 text-muted-foreground select-none w-12">{index + 1}</span>
                          <span className="flex-1 whitespace-pre-wrap">{line || ' '}</span>
                        </div>
                      ))}
                    </code>
                  </pre>
                </div>
              )}
            </AccordionContent>
          </AccordionItem>
          {vulnerability.exploit && (
            <AccordionItem value={`exploit-${vulnerability.id}`}>
              <AccordionTrigger className="text-sm hover:no-underline">
                <div className="flex items-center gap-2">
                  <Zap className="h-4 w-4 text-red-500" />
                  <span>How a Hacker Can Crash the App</span>
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <div className="bg-red-950/20 border border-red-500/20 rounded-md p-3">
                  <p className="whitespace-pre-wrap font-sans text-sm text-red-200">
                    {vulnerability.exploit}
                  </p>
                </div>
              </AccordionContent>
            </AccordionItem>
          )}
          <AccordionItem value={`pentest-${vulnerability.id}`}>
            <AccordionTrigger className="text-sm hover:no-underline">
              <div className="flex items-center gap-2">
                <Target className="h-4 w-4 text-purple-500" />
                <span>How to Penetration Test</span>
              </div>
            </AccordionTrigger>
            <AccordionContent>
              <div className="bg-purple-950/20 border border-purple-500/20 rounded-md p-3">
                <p className="whitespace-pre-wrap font-sans text-sm text-purple-200">
                  {vulnerability.pentest || "Penetration testing guidance not available for this vulnerability."}
                </p>
              </div>
            </AccordionContent>
          </AccordionItem>
          {vulnerability.patchedCode && fileContents[vulnerability.file] && (
            <AccordionItem value={`patched-code-${vulnerability.id}`}>
              <AccordionTrigger className="text-sm hover:no-underline">
                <div className="flex items-center gap-2">
                  <CheckCircle className="h-4 w-4 text-green-500" />
                  <span>Patched Code (Complete File with Diff)</span>
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <DiffViewer
                  originalContent={fileContents[vulnerability.file]}
                  patchedContent={vulnerability.patchedCode}
                  fileName={vulnerability.file}
                />
              </AccordionContent>
            </AccordionItem>
          )}
          {vulnerability.remediation && (
            <AccordionItem value={`remediation-${vulnerability.id}`}>
              <AccordionTrigger className="text-sm hover:no-underline">
                <div className="flex items-center gap-2">
                  <Wrench className="h-4 w-4 text-muted-foreground" />
                  <span>How to Patch</span>
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <p className="whitespace-pre-wrap font-sans text-sm text-muted-foreground">
                  {vulnerability.remediation}
                </p>
              </AccordionContent>
            </AccordionItem>
          )}
        </Accordion>
      </CardContent>
    </Card>
  );
};

export default VulnerabilityCard;
